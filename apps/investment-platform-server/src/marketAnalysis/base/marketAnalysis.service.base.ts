/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MarketAnalysis as PrismaMarketAnalysis } from "@prisma/client";

export class MarketAnalysisServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MarketAnalysisCountArgs, "select">
  ): Promise<number> {
    return this.prisma.marketAnalysis.count(args);
  }

  async marketAnalyses(
    args: Prisma.MarketAnalysisFindManyArgs
  ): Promise<PrismaMarketAnalysis[]> {
    return this.prisma.marketAnalysis.findMany(args);
  }
  async marketAnalysis(
    args: Prisma.MarketAnalysisFindUniqueArgs
  ): Promise<PrismaMarketAnalysis | null> {
    return this.prisma.marketAnalysis.findUnique(args);
  }
  async createMarketAnalysis(
    args: Prisma.MarketAnalysisCreateArgs
  ): Promise<PrismaMarketAnalysis> {
    return this.prisma.marketAnalysis.create(args);
  }
  async updateMarketAnalysis(
    args: Prisma.MarketAnalysisUpdateArgs
  ): Promise<PrismaMarketAnalysis> {
    return this.prisma.marketAnalysis.update(args);
  }
  async deleteMarketAnalysis(
    args: Prisma.MarketAnalysisDeleteArgs
  ): Promise<PrismaMarketAnalysis> {
    return this.prisma.marketAnalysis.delete(args);
  }
}
