/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Fund as PrismaFund } from "@prisma/client";

export class FundServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FundCountArgs, "select">): Promise<number> {
    return this.prisma.fund.count(args);
  }

  async funds(args: Prisma.FundFindManyArgs): Promise<PrismaFund[]> {
    return this.prisma.fund.findMany(args);
  }
  async fund(args: Prisma.FundFindUniqueArgs): Promise<PrismaFund | null> {
    return this.prisma.fund.findUnique(args);
  }
  async createFund(args: Prisma.FundCreateArgs): Promise<PrismaFund> {
    return this.prisma.fund.create(args);
  }
  async updateFund(args: Prisma.FundUpdateArgs): Promise<PrismaFund> {
    return this.prisma.fund.update(args);
  }
  async deleteFund(args: Prisma.FundDeleteArgs): Promise<PrismaFund> {
    return this.prisma.fund.delete(args);
  }
}
